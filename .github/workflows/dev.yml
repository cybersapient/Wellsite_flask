#Workflow for DEV env
name: Build-Deploy-BugFixes-Branch
 
on:
  
  push:
    branches: [ bugfixes ] 
  workflow_dispatch:
env:
  ECS_SERVICE: flask                 # set this to your Amazon ECS service name
  ECS_CLUSTER: Wellsite_UV_flask                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: taskdefinition/dev.json # set this to the path to your Amazon ECS task definition
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.WELLSITE_AWS_KEY_ID_CN }}
          aws-secret-access-key: ${{ secrets.WELLSITE_AWS_SECRET_KEY_CN }}
          aws-region: us-east-1
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.WELLSITE_AWS_REPOSITORY_FLASK_DEV }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR
          SHORT_SHA=`echo "$IMAGE_TAG" | cut -c1-8`
          sed -i 's/qa/dev/g' Dockerfile
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
          #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA"
